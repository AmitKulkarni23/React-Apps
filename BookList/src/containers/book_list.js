// The purpose is to render a list of books
import React, {Component} from 'react';

// React Redux import
// Pull off only the connect function
import {connect} from 'react-redux';

// Action Creator
import {selectBook} from '../actions/index';

// Bind Action Creators
// bindActionCreators -> Action that is generated by teh action creator
// flows through all teh reducers in the application
import {bindActionCreators} from 'redux';

// We have got the component here, we need to plug in
class BookList extends Component{

  renderList(){
    return this.props.books.map((book) => {
      return(
        <li
          key={book.title}
          onClick = {() => this.props.selectBook(book)}
          className="list-group-item">
          {book.title}
        </li>
      );
    });
  }

  // All class based components should have a render() function
  render(){
    return(
      <ul className="list-group col-sm-4">
        {this.renderList()}
      </ul>
    )
  }
}


// Anything returned from thsi function will be returned as props on the
// BookList container
function mapDispatchToProps(dispatch){
  // Whenever select book is called
  // result should be passed to all of our reducers

  // dispatch receives all the actions(something like a funnel and spits it
  // back to all teh reducers)
  return bindActionCreators({selectBook : selectBook}, dispatch);
}

function mapStateToProps(state){
  // Takes our application state as the argument
  // And whatever gets returned from here will show up as props
  // inside of BookList(our Container)
  // Usually we return an object from here

  // Whatever gets returned from here is set to props

  // Whenever our state changes, this container will instantly re-render with a new state of books

  return {
    books : state.books
  };
}


// here we use the connect function
// Connect takes a function and a component and produces a Container

// We want to export the container, not the component BookList

// Now this promotion needs to know about the dispatch method
// So it is better to make it available as a prop

export default connect(mapStateToProps, mapDispatchToProps)(BookList);
